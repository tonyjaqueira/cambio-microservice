name: Continuos Inegrations Tony

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on: [push]
  

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      
      - name: Login no DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      
      - name: Setup Java JDK
        uses: actions/setup-java@v2
        with:
          java-version: '8' 
          distribution: 'adopt'
          
      - name: Build Eureka naming-serve Container Image
        working-directory: ./naming-service
        run: mvn spring-boot:build-image -DskipTests
        
      - name: Build API-Gateway Container Image
        working-directory: ./api-gatway
        run: mvn spring-boot:build-image -DskipTests
        
        #como criamso a image dos serviços de cambio e bokk pelo docker compose, as configurações são distintas dos serviços acima
        #aqui diferente de api e naming-serve, geramos os JAR's e no final chamamos o compose para gerar as images
      - name: Build Cambio Microservice Jar
        working-directory: ./cambio-service
        run: mvn clean package -DskipTests

      - name: Build Book Microservice Jar
        working-directory: ./book-service
        run: mvn clean package -DskipTests
        
        #chamando o compose para gerar as images de Cambio e Book service
      - name: Docker Compose Build
        working-directory: ./cambio-microservice
        run: docker-compose build
  

     
